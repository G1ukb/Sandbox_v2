Декларативный VS Императивный метод написания кода
Что такое Maven? как он работает?
	- За какие этапы проекта отвечает
	- Зачем он нужен
	- Почему пришел на место других средств автоматической сборки проектов (Вместо ant например)
	- Основные преимущества Maven (подробное описание)
		- Независимость от OS
		- Возможность управления зависимостями
		- Хорошая интеграция со средствами разработки
		- Меньше дублирования в случае работы в разных средах (?)
		- Декларативность
	- Перечислить недостатки Maven
		- Неочевидность (из-за декларативности)
		- Мало необходимой документации в частных случаях
		- Разнообразность и недостаток плагинов (в тьме не так просто найти нормальный)
		- Нужен доступ к интернету в случае если не хочется держать репозиторий на пространстве
	- Maven vs Gradle
		- Какой язык описания используют
		- Как с поддрежкой средами разработки
		- Какой репозиторий зависимостей использует
		- Скорость сборки
		- Управление жизненным циклом
		- Управление транзитивными зависимостями
		- Лаконичность описания
		- Общий вывод
	- Что такое артефакт
	- Что такое задача (goal)
	- Какие типы репозитория существуют?
	- Основные фазы жц maven
		- В кратце состав каждого из них
		- Что выполниться если мы выполняем промежуточную команду maven
	- Что такое плагины? Типы плагинов
	- Коротко об частоиспользуемых тегах
	- Профайлы в maven
		- Как описать
		- Как использовать
		- Зачем
		- Как активировать в дефолтном и ручном состояниях
	- Scope в зависимостях Maven
		- Какие бывают (test/compile/provided/runtime/system)
		- Зачем
		- Как использовать
	- Автоматический анализ кода (PMD)
		- Code analyze (findbugs / PMD)
		- Checkstyle plugin (google checkstyle)
	- Maven мультипроект
		- Дочерние субпроекты (Как описываются)
		- Родительский субпроект (Как описывается)
		- Родительский без модулей
		- Дочерний без <parent>
		- Обязательное расширение родительского проекта
		- Будет ли билдиться родительский пом помеченный как pom (формат конечной сборки)
		- Как выглядит переопределение плагинов сборки у дочерних
		- @Как скопировать полученные артифакты из субмодулей
	- Архетипы в мавен
		- Что такое
		- Зачем
		- Как создавать свои (без детального описания)
        - Что такое GAV секция
	- PluginManagment & DependencyManagement
		- Что такое
		- Зачем нужно
	- Версионирование в maven
		- Динамические версии зависимостей
		- Строгая версия vs Shanshop
	- Сборка документации с помощью Maven	
	