--    CREATE TABLE Persons (
--        PersonId int NOT NULL AUTO_INCREMENT,
--        Fio varchar(255) NOT NULL,
--        Age int,
--        PRIMARY KEY (PersonId)
--    );

--    CREATE TABLE Info (
--        infoId int NOT NULL AUTO_INCREMENT,
--        info varchar(255) NOT NULL,
--        fk_person int  NOT NULL,
--        PRIMARY KEY (infoId),
-- 	   FOREIGN KEY (fk_person) REFERENCES Persons (PersonId)
--    );

-- INSERT INTO Persons VALUES (null, 'Fiodar', 27);
-- INSERT INTO Persons VALUES (null, 'Serhey', 35);
-- INSERT INTO Persons VALUES (null, 'Kiryll', 24);
-- SELECT * FROM Persons;

-- INSERT INTO info VALUES (null, 'FiodarInfo', 1);
-- INSERT INTO info VALUES (null, 'SerheyInfo', 2);
-- INSERT INTO info VALUES (null, 'KiryllInfo', 3);
-- SELECT * FROM info;

-- SELECT * FROM Persons WHERE age > 25;
-- SELECT * FROM Persons WHERE age > 25 GROUP BY age HAVING max(Age) > 25;
-- SELECT * FROM Persons ORDER BY age
-- SELECT * FROM Persons GROUP BY age, Fio;
-- SELECT * FROM Persons GROUP BY null;
-- SELECT DISTINCT age FROM Persons;
-- SELECT * FROM Persons WHERE MOD(PersonId, 2) = 1

-- SELECT * FROM Persons WHERE age IN ( SELECT age FROM Persons WHERE age > 30);
-- SELECT * FROM Persons UNION SELECT * FROM Info;
-- SELECT * FROM Persons WHERE age NOT IN ( SELECT age FROM Persons WHERE age > 30);

-- SELECT * FROM Persons  as p
-- 	inner JOIN Info as i
--     on p.personId = i.infoId
--     where age > 25
--     group by age
--     having max(Age) > 25;