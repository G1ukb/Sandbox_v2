- Что такое коллекции и зачем они нам нужны?
    - Какие типы данных могут хранить коллекции? (любые ссылочные)
- Иерархия коллекций
    - Почему map не является частью коллекций
- Интерфейс Collection?
- Стоимость операций коллекций? (Правило большого О)
- Способы перебора коллекций?
    - Способы перебора Мар?
- Что такое итератор, применимо к коллекциям?
    - Fail save vs Fail fast?
    - Лист итератор?
        - Iterator vs listIterator?
    - Enumeration?
    - Итератор полученный из набора Set?
    - Сортировка коллекций?
        - Comparable vs Comparator?
        -
        - Какой алгоритм используется при дефолтном sort? (быстрая)
- Рассмотреть immutable collections? Зачем нам и в каких ситуациях использовать?
    - Mutable vs Immutable

- Работа List? В каких ситуациях использовать?
    - Как работает с точки зрения памяти?
    - ArrayList vs Linked List? В том числе с точке зрения перфоманса?
        *Самый медленный кейс работы ArrayList?
        (Вставка массива в середину другого (почти заполненного) 7массива (копирование, расширение, копирование))
    - Как расширяется Array List в случае заполнения?
    - Как ведут себя листы при удалении / добавлении / изменении элемента?
- Работа Set? В каких ситуациях использовать? Плюсы и минусы Set?
    - Как раотает с точки зрения памяти?
    - Set vs List?
    - EnumSet? Преимущества перед другими сет?
    - HashSet?
        - Hash Code?
        - Как HashSet поддерживает уникальность?
        - Производительность HashSet?
    - TreeSet?
        - Как работает Красно - Черное дерево?

- Работа Queue? В каких ситуациях использовать?
    - Как раотает с точки зрения памяти?
    - PriorityQueue
    - Array Block Queue
- Работа Map? В каких ситуациях использовать?
    - Как раотает с точки зрения памяти?
    - Map vs LinckedMap
    - Разницу между HashMap, TreeMap, HashTable?

Вопросы с упором на предыдущий материал:
    - Clone относительно коллекций




