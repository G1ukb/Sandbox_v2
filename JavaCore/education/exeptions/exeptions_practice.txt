- Create a text file, fill the first line with any sentence.
- Write your own exception in unchecked format
- Write a test class that will contain two methods.
    - One method will read the first line from the file (the implementation should be as optimal as possible in terms of catching errors).
    - The second method will parse the received string and, if the supplied character is found, it will throw the exception written in the second step
- Run the program without catching an exception, see what error is generated, draw conclusions
- Change your own error from unchecked format to checked and see how the IDE (compiler) reacted to this change (draw a conclusion)
- Catching an exception using catch blocks so that no matter if an error is caught, any message is displayed on the screen.

- Manually create any error of the Error class (OutOfMemmory for example)
    - Try to catch Error (make a conclusion)

- Use the interface Thread.UncaughtExceptionHandler
- Use the methods getCause, getMessage of the Throwable class
- Use the methods getStackTrace, printStackTrace of the Throwable class

- Show behavior of finally block if there is one value return from try block and another value return from finally block
- Show behavior of finally block if there is one thrown exception from try block and another thrown exception from finally block
- Show behavior of finally block if there is thrown exception from try block and value return from finally block