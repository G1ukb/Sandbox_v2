Task 1. (30 points) Horse race emulator
Implement horse race emulator using XML configuration
Required beans:
- HorseService for horse management (horses with their riders, breeds and other
characteristics should be obtained from the configuration)
- RaceService for simple getRace() method which generates and returns information
about the upcoming race (horses can be choosen randomly)
- EmulationService for real-time race emulation (it generates data about horses
positions on the console for every second)
SpringJDBC_Main domain objects: Horse, Race, Rider, Breed.
Add client code:
- On start-up application shows the information about upcoming race.
- restMain.user.User is offered to choose his horse (make a bet) with searching by name, breed,
riderâ€™s name
- After that a race emulation starts
- Winner announcement is displayed
(Nothing super-fancy in UI, just console application)

Task 2. (10 points) Annotation-based approach
Move configuration from XML to annotation-based approach
Discuss with mentor the advantages/disadvantages of annotation-based configuration
usage.
Task 3. (10 points) Java-based approach
Move configuration from XML to Java-based approach.
Discuss with mentor the advantages/disadvantages of java-based configuration usage.